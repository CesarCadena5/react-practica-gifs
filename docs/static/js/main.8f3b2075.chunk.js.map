{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItems.js","helpers/GetGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifsExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"kMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACvBV,EAAcU,EAAOF,a,OCEdG,EATK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC1B,OACI,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAMJ,IACrB,oBAAIE,UAAU,QAAd,SAAwBF,Q,uBCJ9BK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAC2CC,UAAUH,GADrD,+DAEOI,MAAMF,GAFb,cAENG,EAFM,gBAGSA,EAAKC,OAHd,uBAGLC,EAHK,EAGLA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBlB,QAT9B,kBAYLa,GAZK,4CAAH,sDAeET,ICMAe,EAjBC,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAEf,ECFwB,SAAEA,GAC1B,MAA0BpB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNnB,EAAQC,GACHmB,MAAM,SAAAC,GACHH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGtB,CAACf,IAEGgB,EDd2BK,CAAcrB,GAAlCY,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAEtB,OACI,gCACI,mCAAMf,EAAN,OACCe,GAAW,4CACZ,qBAAKnB,UAAU,YAAf,SAEQgB,EAAOH,KAAK,SAAAC,GAAG,OAAI,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBY,IAAKZ,EAAIC,eEMvDY,EAhBO,WAClB,MAAoC3C,mBAAS,CAAC,KAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,sCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACK6C,EAAWf,KAAK,SAAAgB,GAAC,OAAI,cAAC,EAAD,CAAiBzB,SAAUyB,EAA3B,SAA+BA,GAAjBA,Y,MCTpDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f3b2075.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputValue = ({target}) => {\r\n        setInputValue(target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            // AcÃ¡, recibo las categorias anteriores con (cate), y a esas anteriores, le agrego el inputValue\r\n            setCategories((cate) => [inputValue, ...cate]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputValue}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","const GifGridItem = ({ title, url}) => {\r\n    return(\r\n        <div className='items animate__animated animate__fadeInBottomRight'>\r\n            <img src={url} alt={ title }/>\r\n            <h3 className='title'>{ title }</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;","const getGifs = async (category) => {\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=h1wwF5i6p8Kw5T6EJWAVYRg5VXxEu0gF`; \r\n    const resp = await fetch(URL);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n    return gifs;\r\n};\r\n\r\nexport default getGifs;","import GifGridItem from \"./GifGridItems\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return(\r\n        <div>\r\n            <h3> {category} </h3>\r\n            {loading && <p>Cargando...</p>}\r\n            <div className='container'>\r\n                {\r\n                    images.map( img => <GifGridItem {...img} key={img.id} /> )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/GetGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n};\r\n\r\n","import { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport GifGrid from \"./Components/GifGrid\";\r\n\r\nconst GifsExpertApp = () => {\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    return(\r\n        <>\r\n            <h2>Gifs</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {categories.map( c => <GifGrid key={c} category={c}>{c}</GifGrid> )}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifsExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifsExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifsExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}